@using Resources;

@model Core.Dtos.OfferDto

@{
    ViewBag.Title = @Resources.Offers;
    Layout = "~/Views/Shared/_Layout.cshtml";
}




@using (Html.BeginForm("Edit", "Offer", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="panel panel-info" style="margin-top:5%;">
        <div class="panel-heading"> <h2> @Resources.Edit</h2></div>
        <div class="panel-body">

            <div class="form-horizontal">               
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Coauthor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Coauthor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Coauthor, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DatePublication, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DatePublication, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DatePublication, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsShow, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsShow)
                            @Html.ValidationMessageFor(model => model.IsShow, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsRead, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsRead)
                            @Html.ValidationMessageFor(model => model.IsRead, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.OfferId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.OfferId, ViewData["SelectedListForTypeOfOffer"] as List<SelectListItem>, "Please select ...", new { @class = "form-control input-xlarge required", @type = "text", @autocomplete = "on", id = "ddlTypeOfOffer" })
                        @Html.ValidationMessageFor(model => model.OfferId, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.ProblemsId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ProblemsId, ViewData["SelectedListForProblem"] as List<SelectListItem>, "Please select ...", new { @class = "form-control input-xlarge required", @type = "text", @autocomplete = "on", id = "ddlProblem" })
                        @Html.ValidationMessageFor(model => model.ProblemsId, "", new { @class = "text-danger" })
                    </div>
                </div>



                @*<div class="form-group">
                        @Html.LabelFor(model => model.StatusesId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.StatusesId, ViewData["SelectedListForStatus"] as List<SelectListItem>, "Please select ...", new { @class = "form-control input-xlarge required", @type = "text", @autocomplete = "on", id = "ddlProblem" })
                            @Html.ValidationMessageFor(model => model.StatusesId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@


                <div class="form-group">
                    @Html.LabelFor(model => model.DirectionId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.DirectionId, ViewData["SelectedListForDirection"] as List<SelectListItem>, "Please select ...", new { @class = "form-control input-xlarge required", @type = "text", @autocomplete = "on", id = "ddlDirection" })
                        @Html.ValidationMessageFor(model => model.DirectionId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (Model.Files.Count != 0)
                {
                    @Html.Hidden("FilesId", Model.Files.First().Id)
                    <div class="form-group">
                        @Html.Label("File:", new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.FileContent, new { @type = "file" })
                        </div>
                    </div>
                }
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value=@Resources.Save class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-footer">

            <div>
                @Html.ActionLink(@Resources.Backto, "Index", new { }, new { @class = "btn btn-info" })
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
